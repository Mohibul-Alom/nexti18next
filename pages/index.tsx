import type { NextPage } from "next";
import Head from "next/head";
import { useTranslation } from "next-i18next";
import Link from "next/link";
import { GetStaticProps } from "next";
import styles from "../styles/Home.module.css";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";

import { useRouter } from "next/router";

export const getStaticProps: GetStaticProps = async (context) => {
  const { locale } = context;

  //locale can be string or undefined, so we do a check before returning the props
  if (locale) {
    return {
      props: {
        ...(await serverSideTranslations(locale, ["home"])),
      },
    };
  }
  //in case the locale is undefined, we can just serve our default langueges
  return {
    props: {
      ...(await serverSideTranslations("es-ES", ["home"])),
    },
  };
};

const Home: NextPage = () => {
  const { t } = useTranslation();

  const router = useRouter();
  const { pathname, asPath, query } = router;
  // change just the locale and maintain all other route information including href's query

  const dynamicLink = (locale: string) => {
    router.push({ pathname, query }, asPath, { locale: locale });
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {/* here we are accessing welcome_msg from home.json  */}
        <h1 className={styles.title}>{t("home:welcome_msg")}</h1>

        <h4> With next/link </h4>

        <ul style={{ margin: "0" }}>
          <li>
            <Link href="/" locale="es-ES">
              <a style={{ textDecoration: "underline" }}>To /</a>
            </Link>
          </li>
          <li>
            <Link href="/" locale="fr">
              <a style={{ textDecoration: "underline" }}>To /fr</a>
            </Link>
          </li>
          <li>
            <Link href="/" locale="en-US">
              <a style={{ textDecoration: "underline" }}>To /en-US</a>
            </Link>
          </li>
        </ul>

        <h4> With next/router </h4>

        <div
          style={{ cursor: "pointer" }}
          onClick={() => {
            router.push("/", "/", { locale: "fr" });
          }}
        >
          to /fr
        </div>

        <h4> Dynamic route with router.push() </h4>

        <div
          style={{ cursor: "pointer" }}
          onClick={() => {
            dynamicLink("fr");
          }}
        >
          to /fr
        </div>
      </main>
    </div>
  );
};

export default Home;
